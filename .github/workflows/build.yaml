name: Build app

on:
  push:
    paths:
      - ".github/workflows/build.yaml"
      - "android/**"
      - "lib/**"
      - "web/**"
      - "pubspec.yaml"
      - "pubspec.lock"
  pull_request:
    paths:
      - ".github/workflows/build.yaml"
      - "android/**"
      - "lib/**"
      - "web/**"
      - "pubspec.yaml"
      - "pubspec.lock"

env:
  JAVA_VERSION: "17"
  FLUTTER_CHANNEL: "beta"

permissions:
  contents: read

jobs:
  build-apk:
    name: Build app for Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: "flutter-:os:-:arch:-:version:-:hash:"

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build release app for Android
        run: flutter build apk --split-per-abi
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Build debug app for Android
        run: flutter build apk --debug --split-per-abi
        if: !startsWith(github.ref, 'refs/tags/v')

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apks
          if-no-files-found: error
          path: |
            build/app/outputs/flutter-apk/app-*.apk

  build-web:
    name: Build app for web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true
          cache-key: "flutter-:os:-:arch:-:version:-:hash:"

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Build app for web
        run: flutter build web

      - name: Patch app name for web
        run: |
          jq -c '.app_name = "Mafia companion"' build/web/version.json >build/web/version.new.json
          mv build/web/version{.new,}.json

      - name: Upload web artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: build/web/

  publish-web:
    name: Publish web build on GitHub Pages
    runs-on: ubuntu-latest
    needs:
      - build-web
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Publish web on GitHub pages
        id: deployment
        uses: actions/deploy-pages@v2

  draft-release:
    name: Draft release
    runs-on: ubuntu-latest
    needs:
      - build-apk
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v3
        with:
          name: android-apks
          path: build

      - name: Generate release notes
        id: release_notes
        run: |
          file="$(mktemp --suffix=.md)"
          previous_tag="$(git describe --tags --abbrev=0 "${GITHUB_REF_NAME}^")"
          start_line="$(grep -En "## \[v?$GITHUB_REF_NAME\]" CHANGELOG.md | cut -d ':' -f 1)"
          end_line="$(grep -En "## \[v?$previous_tag\]" CHANGELOG.md | cut -d ':' -f 1)"
          sed -n "$((${start_line} + 1)),$((${end_line} - 1))p" CHANGELOG.md >$file
          sed -Ei 's/###/##/;1{/^\s*$/d}' release-notes.md
          # ChatGPT-powered magic to remove trailing empty lines
          sed -i ':l;/^\n*$/{$d;N;bl;}' release-notes.md
          echo -ne '\n## Commits\n\n' >>release-notes.md
          git log --format="- %h: %s (%aN)" "${previous_tag}..${GITHUB_REF_NAME}" >>$file
          echo "$GITHUB_REF_NAME" | awk '{ print "prerelease=" (($1 ~ /v[0-9]+\.[0-9]+\.[0-9]+-.+/) ? "true" : "false"); }' >>$GITHUB_OUTPUT
          echo "release_notes=$file" >>$GITHUB_OUTPUT

      - name: Create a release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ steps.release_notes.outputs.release_notes }}
          prerelease: ${{ steps.release_notes.outputs.prerelease }}
          files: |
            build/app-*.apk
          fail_on_unmatched_files: true
